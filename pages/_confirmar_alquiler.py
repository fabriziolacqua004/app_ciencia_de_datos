import streamlit as st
import time
from functions import add_confirmacion, execute_query

st.markdown("""
    <style>
      /* Oculta el men√∫ de hamburguesa */
      #MainMenu {visibility: hidden !important;}
      /* Oculta la navegaci√≥n de p√°ginas en la cabecera */
      nav[aria-label="Page navigation"] {display: none !important;}
      /* Oculta la lista de p√°ginas en la sidebar */
      [data-testid="stSidebarNav"] {display: none !important;}
    </style>
""", unsafe_allow_html=True)

st.title("üí∏ Confirmar alquiler")

# 1) Verificar que haya un alquiler en curso
if 'transaccion' not in st.session_state or st.session_state['transaccion']['tipo'].lower() != 'alquiler':
    st.error("No hay un alquiler en proceso.")
    st.stop()

pub_id = st.session_state['transaccion']['pub_id']

# 2) Bloquear la publicaci√≥n en cuanto se ingresa (primera carga)
if 'bloqueado_alquiler' not in st.session_state:
    st.session_state['bloqueado_alquiler'] = True
    execute_query(
        "UPDATE publicaciones SET activoinactivo = 0 WHERE id = %s",
        params=(pub_id,), is_select=False
    )

# 3) Mostrar tiempo fijo de 5 minutos (sin autorefresh din√°mico)
st.markdown("### ‚è≥ Tienes 5 minutos para confirmar el alquiler")

# 4) Bot√≥n para volver manualmente al cat√°logo, liberando la publicaci√≥n
if st.button("üîô Volver a publicaciones"):
    execute_query(
        "UPDATE publicaciones SET activoinactivo = 1 WHERE id = %s",
        params=(pub_id,), is_select=False
    )
    # Limpiar estado de transacci√≥n para que no queden "residuos"
    st.session_state.pop('transaccion', None)
    st.session_state.pop('bloqueado_alquiler', None)
    st.switch_page('pages/comprador.py')

# 5) Formulario de pago y d√≠as de alquiler
dias   = st.number_input("Cantidad de d√≠as a alquilar", min_value=1, step=1)
metodo = st.selectbox("M√©todo de pago", ["Mercado Pago", "Tarjeta de cr√©dito", "Tarjeta de d√©bito"])
st.subheader("üí≥ Datos de pago")
nombre = st.text_input("Nombre en la tarjeta")
numero = st.text_input("N√∫mero de tarjeta")
venc   = st.text_input("Fecha de vencimiento (MM/AA)")
cvv    = st.text_input("CVV")

# 6) Bot√≥n ‚ÄúConfirmar alquiler‚Äù
if st.button("Confirmar alquiler"):
    # Validar que se hayan completado todos los campos
    if not all([dias, nombre, numero, venc, cvv]):
        st.warning("Completa todos los campos.")
    else:
        # a) Insertar la confirmaci√≥n en la tabla (vigencia = d√≠as)
        add_confirmacion(pub_id, st.session_state['user_id'], metodo, int(dias))
        # b) Marcar la publicaci√≥n como inactiva (ya alquilada)
        execute_query(
            "UPDATE publicaciones SET activoinactivo = 0 WHERE id = %s",
            params=(pub_id,), is_select=False
        )
        # c) Limpiar el estado de sesi√≥n para no mantener ‚Äútransaccion‚Äù
        st.session_state.pop('transaccion', None)
        st.session_state.pop('bloqueado_alquiler', None)
        # d) Mostrar mensaje de √©xito
        st.success(f"‚úÖ Alquilado por {dias} d√≠as. Redirigiendo al cat√°logo en 5 segundos...")
        # e) Esperar 5 segundos antes de redirigir
        time.sleep(5)
        # f) Redirigir al usuario a la p√°gina de publicaciones
        st.switch_page('pages/comprador.py')
